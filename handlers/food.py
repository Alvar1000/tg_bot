from utils.api import get_food_info

import json
from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from states import FoodState

router = Router()
@router.message(Command("log_food"))
async def start_log_food(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞:")
    await state.set_state(FoodState.waiting_for_food)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è


@router.message(FoodState.waiting_for_food)
async def receive_food_name(message: types.Message, state: FSMContext):
    food_name = message.text.strip()
    food_info = get_food_info(food_name)

    if food_info:
        user_id = str(message.from_user.id)
        calories = food_info['calories']

        try:
            with open("data/users.json", "r", encoding="utf-8") as file:
                users = json.load(file)
        except (FileNotFoundError, json.JSONDecodeError):
            await message.answer("–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

        if user_id in users:
            users[user_id]["calories_consumed"] += calories
        else:
            await message.answer("–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

        with open("data/users.json", "w", encoding="utf-8") as file:
            json.dump(users, file, indent=4, ensure_ascii=False)

        await message.answer(f"üçé {food_info['name']} —Å–æ–¥–µ—Ä–∂–∏—Ç {calories} –∫–∫–∞–ª –Ω–∞ 100 –≥. –ó–∞–ø–∏—Å–∞–Ω–æ –≤ –≤–∞—à –¥–Ω–µ–≤–Ω–∏–∫!")
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    await state.clear()
